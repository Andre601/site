{"componentChunkName":"component---src-templates-wiki-js","path":"/wiki/users/forwarding/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Caution = makeShortcode(\"Caution\");\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Configuring player information forwarding\"), mdx(\"p\", null, \"Velocity supports forwarding information about your players to your servers, such as IP addresses, UUIDs and skins.\\nVelocity supports two different methods for forwarding player information to your servers, which are described in the\\nappropriate sections.\"), mdx(\"h2\", null, \"Configuring modern forwarding\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"modern\"), \" forwarding is a Velocity-native format. It forwards all player information in an efficient binary format and\\nemploys a MAC code to make it much more difficult to trick the server into impersonating your Velocity proxy.\\nHowever, it is only available for Minecraft 1.13 or higher.\"), mdx(\"p\", null, \"To use modern forwarding with any supported server implementation, set the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"player-info-forwarding\"), \" setting in\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"velocity.toml\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"modern\"), \". You then need to ensure your server is properly configured to use velocity forwarding by\\nfollowing the steps in the appropriate section below:\"), mdx(Caution, {\n    mdxType: \"Caution\"\n  }, \"Modern forwarding, while more secure than the legacy  BungeeCord forwarding scheme, is incompatible with Minecraft versions below 1.13, Minecraft Forge (both versions for Minecraft 1.12.2 and below and for 1.14 and above), and ProtocolSupport. If you support or rely on any of these, you will need to use legacy BungeeCord-compatible forwarding instead.\"), mdx(\"h2\", null, \"Configuring Paper\"), mdx(\"p\", null, \"You will need build 377 and above for Paper 1.13+ to use modern forwarding.\"), mdx(\"p\", null, \"To allow Paper to understand the forwarding player data, in your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"paper.yml\"), \", set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"settings.velocity-support.enabled\\n\"), \" to true and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"settings.velocity-support.secret\"), \" to match the secret in your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"velocity.toml\"), \". You must also set\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"settings.velocity-support.online-mode\"), \" to the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"online-mode\"), \" setting in your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"velocity.toml\"), \". Once you're done\\nediting \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"paper.yml\"), \", reboot your server.\"), mdx(\"h2\", null, \"Configuring Fabric\"), mdx(\"p\", null, \"A mod called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.curseforge.com/minecraft/mc-mods/fabricproxy\"\n  }), \"FabricProxy\"), \" allows you to use Velocity\\nmodern forwarding with a modded server using Fabric.\"), mdx(\"h1\", null, \"Configuring legacy BungeeCord-compatible forwarding\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"legacy\"), \" forwarding is the player information forwarding protocol that is used by BungeeCord when enabling IP\\nforwarding from BungeeCord. Due to this, it is ubiquitous and well-supported by most server implementations. It has\\nexcellent compatibility (supporting version sas old as 1.7.2, released in 2013) and will work with Forge if you\\nalso install SpongeForge on your modded server and configure it correctly. However, it is not as secure as the\\nVelocity forwarding.\"), mdx(\"p\", null, \"If you need to use BungeeCord-compatible forwarding, simply set your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"player-infor-forwarding\"), \" setting in \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"velocity\\n.toml\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"legacy\"), \". You will also need to make sure your server is properly configured to understand the data sent by\\nVelocity.\"), mdx(Caution, {\n    mdxType: \"Caution\"\n  }, \"Legacy forwarding is \", mdx(\"strong\", null, \"fundamentally insecure\"), \". If you must use it, you should understand \", mdx(Link, {\n    to: \"/wiki/deployment/security/\",\n    mdxType: \"Link\"\n  }, \"how to secure your server properly\"), \". That page reviews all the possible options to secure your server so that nothing aside from the proxy can connect to your server.\"), mdx(\"h2\", null, \"Configuring Spigot / Paper\"), mdx(\"p\", null, \"To make Spigot or Paper understand the data forwarded from Velocity, set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"settings.bungeecord\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"true\"), \" in your\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"spigot.yml\"), \" and then reboot your server.\"), mdx(\"h2\", null, \"Configuring Sponge\"), mdx(\"p\", null, \"To configure Sponge to understand the data forwarded from Velocity, set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"modules.bungeecord\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"true\"), \" and\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"bungeecord.ip-forwarding\"), \" to true in your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config/sponge/global.conf\"), \" file, and then restart your Sponge server.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"excerpt":"Configuring player information forwarding Velocity supports forwarding information about your players to your servers, such as IP addressesâ€¦"}},"pageContext":{"slug":"/users/forwarding/"}},"staticQueryHashes":["63159454"]}